{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\PersonalBlogForFun\\\\BlogForFun\\\\FrontEnd\\\\src\\\\components\\\\ArticleDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ArticleDisply = () => {\n  _s();\n  const [ArticleList, setArticles] = useState([]); // 初始化为空数组\n\n  useEffect(() => {\n    const fetchArticleList = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/articles\");\n        if (!response.ok) {\n          throw new Error(\"Fetch data got an error .... pls check the ArticleDisplay component...\");\n        }\n        const data = await response.json();\n        setArticles(data.articles); // 假设返回的数据结构是 { articles: [...] }\n      } catch (error) {\n        console.log(\"Error is on going now...\", error);\n      }\n    };\n    fetchArticleList(); // 调用函数\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hello Welcome to My Blog!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ArticleList.map(article => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: article.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Author: \", article.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Category: \", article.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tags: \", article.tags.join(\", \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, article._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ArticleDisply, \"7kqiqSJc4neptcXsKs8aZtG2MpM=\");\n_c = ArticleDisply;\nexport default ArticleDisply;\nvar _c;\n$RefreshReg$(_c, \"ArticleDisply\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ArticleDisply","_s","ArticleList","setArticles","fetchArticleList","response","fetch","ok","Error","data","json","articles","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","article","title","content","author","category","tags","join","_id","_c","$RefreshReg$"],"sources":["C:/Project/PersonalBlogForFun/BlogForFun/FrontEnd/src/components/ArticleDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ArticleDisply = () => {\r\n  const [ArticleList, setArticles] = useState([]); // 初始化为空数组\r\n\r\n  useEffect(() => {\r\n    const fetchArticleList = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/articles\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Fetch data got an error .... pls check the ArticleDisplay component...\");\r\n        }\r\n        const data = await response.json();\r\n        setArticles(data.articles); // 假设返回的数据结构是 { articles: [...] }\r\n      } catch (error) {\r\n        console.log(\"Error is on going now...\", error);\r\n      }\r\n    };\r\n\r\n    fetchArticleList(); // 调用函数\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hello Welcome to My Blog!</h2>\r\n      <ul>\r\n        {ArticleList.map((article) => (\r\n          <li key={article._id}> {/* 确保每个元素有唯一的 key */}\r\n            <>\r\n              <h3>{article.title}</h3>\r\n              <p>{article.content}</p>\r\n              <p>Author: {article.author}</p>\r\n              <p>Category: {article.category}</p>\r\n              <p>Tags: {article.tags.join(\", \")}</p>\r\n            </>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleDisply;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wEAAwE,CAAC;QAC3F;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,WAAW,CAACM,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;MAChD;IACF,CAAC;IAEDR,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCtB,OAAA;MAAAkB,QAAA,EACGb,WAAW,CAACkB,GAAG,CAAEC,OAAO,iBACvBxB,OAAA;QAAAkB,QAAA,GAAsB,GAAC,eACrBlB,OAAA,CAAAE,SAAA;UAAAgB,QAAA,gBACElB,OAAA;YAAAkB,QAAA,EAAKM,OAAO,CAACC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBtB,OAAA;YAAAkB,QAAA,EAAIM,OAAO,CAACE;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBtB,OAAA;YAAAkB,QAAA,GAAG,UAAQ,EAACM,OAAO,CAACG,MAAM;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BtB,OAAA;YAAAkB,QAAA,GAAG,YAAU,EAACM,OAAO,CAACI,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCtB,OAAA;YAAAkB,QAAA,GAAG,QAAM,EAACM,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,eACtC,CAAC;MAAA,GAPIE,OAAO,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}